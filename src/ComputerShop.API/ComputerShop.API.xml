<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ComputerShop.API</name>
    </assembly>
    <members>
        <member name="T:ComputerShop.API.Controllers.AdminController">
            <summary>
            Admin panel controller
            </summary>
        </member>
        <member name="T:ComputerShop.API.Controllers.AuthController">
            <summary>
            Controller for auth options
            </summary>
        </member>
        <member name="M:ComputerShop.API.Controllers.AuthController.#ctor(AutoMapper.IMapper,ComputerShop.API.Services.Interfaces.IUserService,ComputerShop.Core.Services.Interfaces.ITokenService,ComputerShop.Core.Interfaces.IAppLogger{ComputerShop.API.Controllers.AuthController})">
            <summary>
            
            </summary>
            <param name="mapper">Auto Mapper</param>
            <param name="userService">Service to manage users </param>
            <param name="tokenService">Service to manage tokens</param>
            <param name="logger"></param>
        </member>
        <member name="M:ComputerShop.API.Controllers.AuthController.Register(ComputerShop.API.Models.Register)">
             <summary>
             For register user
             </summary>
             <remarks>
            
             Sample body:
             
                 {
                     "firstName": "TestFirstName1"
                     "lastName": "TestFirstName1"
                     "email": "testuser1@gmail.com"
                     "userName": "Testuser1"
                     "password": "Pass@word123"
                     "phone": "+3801111111111"
                 }
             
             </remarks>
             <param name="register">Register model from UI in body</param>
             <returns></returns>
             <response code="200">Register was success</response>
             <response code="400">Register was invalid</response>
        </member>
        <member name="M:ComputerShop.API.Controllers.AuthController.UserNameCheck(System.String)">
            <summary>
            Check username exist
            </summary>
            <param name="username">User name</param>
            <returns>Returns True if username is not exist</returns>
            <response code="200">Always should return code 200</response>
        </member>
        <member name="M:ComputerShop.API.Controllers.AuthController.Login(ComputerShop.API.Models.Login)">
             <summary>
             Loin for user
             </summary>
             <remarks>
            
             Sample body:
            
                 {
                     "userLogin": "admin@gmail.com",
                     "userPassword": "Pass@word123",
                     "rememberMe": true
                 }
            
             </remarks>
             <param name="request"></param>
             <returns></returns>
             <response code="200">Login was success</response>
             <response code="400">Model has som error</response>
             <response code="401">User not found</response>
        </member>
        <member name="T:ComputerShop.API.Controllers.ProductController">
            <summary>
            Generic controller for products
            </summary>
        </member>
        <member name="M:ComputerShop.API.Controllers.ProductController.#ctor(ComputerShop.Core.Services.Interfaces.IProductService)">
            <summary>
            
            </summary>
            <param name="productService"></param>
        </member>
        <member name="M:ComputerShop.API.Controllers.ProductController.GetProducts(ComputerShop.API.Models.GetProductsRequest)">
            <summary>
            Get page of products
            </summary>
            <param name="productsRequest">Includes params for pagination (not required) and filters (required)</param>
            <returns></returns>
        </member>
        <member name="M:ComputerShop.API.Controllers.ProductController.GetProduct(System.String)">
            <summary>
            Get specific product
            </summary>
            <param name="productStockNumber">Product's stock number</param>
            <returns></returns>
        </member>
        <member name="M:ComputerShop.API.Controllers.ProductController.AddProduct(ComputerShop.API.DTOs.ProductToAddDto)">
            <summary>
            Add new product
            </summary>
            <param name="product"></param>
            <returns></returns>
        </member>
        <member name="T:ComputerShop.API.Extensions.ServiceCollectionExtensions">
            <summary>
            Extensions for service collection
            </summary>
        </member>
        <member name="M:ComputerShop.API.Extensions.ServiceCollectionExtensions.AddServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Register services
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:ComputerShop.API.Models.ProductViewParameters">
            <summary>
            Parameters for pagination product
            </summary>
        </member>
        <member name="M:ComputerShop.API.Services.UserService.UserSingIn(System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="login"></param>
            <returns></returns>
        </member>
        <member name="T:ComputerShop.API.Validators.Extensions.PhoneNumberValidator`2">
            <summary>
            Phone number custom validator
            </summary>
        </member>
        <member name="T:ComputerShop.API.Validators.Extensions.UserNameValidator`2">
            <summary>
            Ensures that the username is unique
            </summary>
        </member>
        <member name="T:ComputerShop.API.Validators.Extensions.ValidatorExtension">
            <summary>
            Extensions for fluentvalidator
            </summary>
        </member>
        <member name="M:ComputerShop.API.Validators.Extensions.ValidatorExtension.PhoneNumber``1(FluentValidation.IRuleBuilder{``0,System.String})">
            <summary>
            Check that the phone number is correct
            </summary>
            <param name="rule"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ComputerShop.API.Validators.Extensions.ValidatorExtension.UniqueUserName``1(FluentValidation.IRuleBuilder{``0,System.String},Microsoft.AspNetCore.Identity.UserManager{ComputerShop.Core.Entities.ApplicationUser})">
            <summary>
            Check that the username is unique
            </summary>
            <param name="rule"></param>
            <param name="userManager"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:ComputerShop.API.Validators.GetProductsRequestValidator">
            <summary>
            Validator for products request model
            </summary>
        </member>
        <member name="M:ComputerShop.API.Validators.GetProductsRequestValidator.#ctor">
            <summary>
            Constructor which to do validation
            </summary>
        </member>
        <member name="M:ComputerShop.Core.Services.TokenService.GetToken(ComputerShop.Core.Entities.ApplicationUser)">
            <summary>
            Generate token for user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
    </members>
</doc>
